// Code generated by gen.go using fiat-crypto.
//
// Autogenerated: './word_by_word_montgomery' --output fpMont381.go --lang Go --package-name ff --doc-prepend-header 'Code generated by gen.go using fiat-crypto.' --package-case lowerCamelCase --public-function-case lowerCamelCase --public-type-case lowerCamelCase --doc-newline-before-package-declaration --cmovznz-by-mul FpMont 64 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab add sub mul square
//
// curve description: FpMont
//
// machine_wordsize = 64 (from "64")
//
// requested operations: add, sub, mul, square
//
// m = 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab (from "0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab")
//
//
//
// NOTE: In addition to the bounds specified above each function, all
//
//   functions synthesized for this Montgomery arithmetic require the
//
//   input to be strictly less than the prime modulus (m), and also
//
//   require the input to be in the unique saturated representation.
//
//   All functions also ensure that these two properties are true of
//
//   return values.
//
//
//
// Computed values:
//
//   eval z = z[0] + (z[1] << 64) + (z[2] << 128) + (z[3] << 192) + (z[4] << 256) + (z[5] << 0x140)
//
//   bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128) + (z[17] << 136) + (z[18] << 144) + (z[19] << 152) + (z[20] << 160) + (z[21] << 168) + (z[22] << 176) + (z[23] << 184) + (z[24] << 192) + (z[25] << 200) + (z[26] << 208) + (z[27] << 216) + (z[28] << 224) + (z[29] << 232) + (z[30] << 240) + (z[31] << 248) + (z[32] << 256) + (z[33] << 0x108) + (z[34] << 0x110) + (z[35] << 0x118) + (z[36] << 0x120) + (z[37] << 0x128) + (z[38] << 0x130) + (z[39] << 0x138) + (z[40] << 0x140) + (z[41] << 0x148) + (z[42] << 0x150) + (z[43] << 0x158) + (z[44] << 0x160) + (z[45] << 0x168) + (z[46] << 0x170) + (z[47] << 0x178)
//
//   twos_complement_eval z = let x1 := z[0] + (z[1] << 64) + (z[2] << 128) + (z[3] << 192) + (z[4] << 256) + (z[5] << 0x140) in
//
//                            if x1 & (2^384-1) < 2^383 then x1 & (2^384-1) else (x1 & (2^384-1)) - 2^384

package ff

import "math/bits"

type fiatFpMontUint1 uint8
type fiatFpMontInt1 int8

// The function fiatFpMontAddcarryxU64 is a thin wrapper around bits.Add64 that uses fiatFpMontUint1 rather than uint64
func fiatFpMontAddcarryxU64(x uint64, y uint64, carry fiatFpMontUint1) (uint64, fiatFpMontUint1) {
	sum, carryOut := bits.Add64(x, y, uint64(carry))
	return sum, fiatFpMontUint1(carryOut)
}

// The function fiatFpMontSubborrowxU64 is a thin wrapper around bits.Sub64 that uses fiatFpMontUint1 rather than uint64
func fiatFpMontSubborrowxU64(x uint64, y uint64, carry fiatFpMontUint1) (uint64, fiatFpMontUint1) {
	sum, carryOut := bits.Sub64(x, y, uint64(carry))
	return sum, fiatFpMontUint1(carryOut)
}

// The function fiatFpMontCmovznzU64 is a single-word conditional move.
//
// Postconditions:
//   out1 = (if arg1 = 0 then arg2 else arg3)
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0xffffffffffffffff]
//   arg3: [0x0 ~> 0xffffffffffffffff]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffffffffffff]
func fiatFpMontCmovznzU64(out1 *uint64, arg1 fiatFpMontUint1, arg2 uint64, arg3 uint64) {
	x1 := (uint64(arg1) * 0xffffffffffffffff)
	x2 := ((x1 & arg3) | ((^x1) & arg2))
	*out1 = x2
}

// The function fiatFpMontAdd adds two field elements in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
//   0 ≤ eval arg2 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) + eval (from_montgomery arg2)) mod m
//   0 ≤ eval out1 < m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
//   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
func fiatFpMontAdd(out1 *[6]uint64, arg1 *[6]uint64, arg2 *[6]uint64) {
	var x1 uint64
	var x2 fiatFpMontUint1
	x1, x2 = fiatFpMontAddcarryxU64(arg1[0], arg2[0], 0x0)
	var x3 uint64
	var x4 fiatFpMontUint1
	x3, x4 = fiatFpMontAddcarryxU64(arg1[1], arg2[1], x2)
	var x5 uint64
	var x6 fiatFpMontUint1
	x5, x6 = fiatFpMontAddcarryxU64(arg1[2], arg2[2], x4)
	var x7 uint64
	var x8 fiatFpMontUint1
	x7, x8 = fiatFpMontAddcarryxU64(arg1[3], arg2[3], x6)
	var x9 uint64
	var x10 fiatFpMontUint1
	x9, x10 = fiatFpMontAddcarryxU64(arg1[4], arg2[4], x8)
	var x11 uint64
	var x12 fiatFpMontUint1
	x11, x12 = fiatFpMontAddcarryxU64(arg1[5], arg2[5], x10)
	var x13 uint64
	var x14 fiatFpMontUint1
	x13, x14 = fiatFpMontSubborrowxU64(x1, 0xb9feffffffffaaab, 0x0)
	var x15 uint64
	var x16 fiatFpMontUint1
	x15, x16 = fiatFpMontSubborrowxU64(x3, 0x1eabfffeb153ffff, x14)
	var x17 uint64
	var x18 fiatFpMontUint1
	x17, x18 = fiatFpMontSubborrowxU64(x5, 0x6730d2a0f6b0f624, x16)
	var x19 uint64
	var x20 fiatFpMontUint1
	x19, x20 = fiatFpMontSubborrowxU64(x7, 0x64774b84f38512bf, x18)
	var x21 uint64
	var x22 fiatFpMontUint1
	x21, x22 = fiatFpMontSubborrowxU64(x9, 0x4b1ba7b6434bacd7, x20)
	var x23 uint64
	var x24 fiatFpMontUint1
	x23, x24 = fiatFpMontSubborrowxU64(x11, 0x1a0111ea397fe69a, x22)
	var x26 fiatFpMontUint1
	_, x26 = fiatFpMontSubborrowxU64(uint64(x12), uint64(0x0), x24)
	var x27 uint64
	fiatFpMontCmovznzU64(&x27, x26, x13, x1)
	var x28 uint64
	fiatFpMontCmovznzU64(&x28, x26, x15, x3)
	var x29 uint64
	fiatFpMontCmovznzU64(&x29, x26, x17, x5)
	var x30 uint64
	fiatFpMontCmovznzU64(&x30, x26, x19, x7)
	var x31 uint64
	fiatFpMontCmovznzU64(&x31, x26, x21, x9)
	var x32 uint64
	fiatFpMontCmovznzU64(&x32, x26, x23, x11)
	out1[0] = x27
	out1[1] = x28
	out1[2] = x29
	out1[3] = x30
	out1[4] = x31
	out1[5] = x32
}

// The function fiatFpMontSub subtracts two field elements in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
//   0 ≤ eval arg2 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) - eval (from_montgomery arg2)) mod m
//   0 ≤ eval out1 < m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
//   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
func fiatFpMontSub(out1 *[6]uint64, arg1 *[6]uint64, arg2 *[6]uint64) {
	var x1 uint64
	var x2 fiatFpMontUint1
	x1, x2 = fiatFpMontSubborrowxU64(arg1[0], arg2[0], 0x0)
	var x3 uint64
	var x4 fiatFpMontUint1
	x3, x4 = fiatFpMontSubborrowxU64(arg1[1], arg2[1], x2)
	var x5 uint64
	var x6 fiatFpMontUint1
	x5, x6 = fiatFpMontSubborrowxU64(arg1[2], arg2[2], x4)
	var x7 uint64
	var x8 fiatFpMontUint1
	x7, x8 = fiatFpMontSubborrowxU64(arg1[3], arg2[3], x6)
	var x9 uint64
	var x10 fiatFpMontUint1
	x9, x10 = fiatFpMontSubborrowxU64(arg1[4], arg2[4], x8)
	var x11 uint64
	var x12 fiatFpMontUint1
	x11, x12 = fiatFpMontSubborrowxU64(arg1[5], arg2[5], x10)
	var x13 uint64
	fiatFpMontCmovznzU64(&x13, x12, uint64(0x0), 0xffffffffffffffff)
	var x14 uint64
	var x15 fiatFpMontUint1
	x14, x15 = fiatFpMontAddcarryxU64(x1, (x13 & 0xb9feffffffffaaab), 0x0)
	var x16 uint64
	var x17 fiatFpMontUint1
	x16, x17 = fiatFpMontAddcarryxU64(x3, (x13 & 0x1eabfffeb153ffff), x15)
	var x18 uint64
	var x19 fiatFpMontUint1
	x18, x19 = fiatFpMontAddcarryxU64(x5, (x13 & 0x6730d2a0f6b0f624), x17)
	var x20 uint64
	var x21 fiatFpMontUint1
	x20, x21 = fiatFpMontAddcarryxU64(x7, (x13 & 0x64774b84f38512bf), x19)
	var x22 uint64
	var x23 fiatFpMontUint1
	x22, x23 = fiatFpMontAddcarryxU64(x9, (x13 & 0x4b1ba7b6434bacd7), x21)
	var x24 uint64
	x24, _ = fiatFpMontAddcarryxU64(x11, (x13 & 0x1a0111ea397fe69a), x23)
	out1[0] = x14
	out1[1] = x16
	out1[2] = x18
	out1[3] = x20
	out1[4] = x22
	out1[5] = x24
}

// The function fiatFpMontMul multiplies two field elements in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
//   0 ≤ eval arg2 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg2)) mod m
//   0 ≤ eval out1 < m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
//   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
func fiatFpMontMul(out1 *[6]uint64, arg1 *[6]uint64, arg2 *[6]uint64) {
	x1 := arg1[1]
	x2 := arg1[2]
	x3 := arg1[3]
	x4 := arg1[4]
	x5 := arg1[5]
	x6 := arg1[0]
	var x7 uint64
	var x8 uint64
	x8, x7 = bits.Mul64(x6, arg2[5])
	var x9 uint64
	var x10 uint64
	x10, x9 = bits.Mul64(x6, arg2[4])
	var x11 uint64
	var x12 uint64
	x12, x11 = bits.Mul64(x6, arg2[3])
	var x13 uint64
	var x14 uint64
	x14, x13 = bits.Mul64(x6, arg2[2])
	var x15 uint64
	var x16 uint64
	x16, x15 = bits.Mul64(x6, arg2[1])
	var x17 uint64
	var x18 uint64
	x18, x17 = bits.Mul64(x6, arg2[0])
	var x19 uint64
	var x20 fiatFpMontUint1
	x19, x20 = fiatFpMontAddcarryxU64(x18, x15, 0x0)
	var x21 uint64
	var x22 fiatFpMontUint1
	x21, x22 = fiatFpMontAddcarryxU64(x16, x13, x20)
	var x23 uint64
	var x24 fiatFpMontUint1
	x23, x24 = fiatFpMontAddcarryxU64(x14, x11, x22)
	var x25 uint64
	var x26 fiatFpMontUint1
	x25, x26 = fiatFpMontAddcarryxU64(x12, x9, x24)
	var x27 uint64
	var x28 fiatFpMontUint1
	x27, x28 = fiatFpMontAddcarryxU64(x10, x7, x26)
	x29 := (uint64(x28) + x8)
	var x30 uint64
	_, x30 = bits.Mul64(x17, 0x89f3fffcfffcfffd)
	var x32 uint64
	var x33 uint64
	x33, x32 = bits.Mul64(x30, 0x1a0111ea397fe69a)
	var x34 uint64
	var x35 uint64
	x35, x34 = bits.Mul64(x30, 0x4b1ba7b6434bacd7)
	var x36 uint64
	var x37 uint64
	x37, x36 = bits.Mul64(x30, 0x64774b84f38512bf)
	var x38 uint64
	var x39 uint64
	x39, x38 = bits.Mul64(x30, 0x6730d2a0f6b0f624)
	var x40 uint64
	var x41 uint64
	x41, x40 = bits.Mul64(x30, 0x1eabfffeb153ffff)
	var x42 uint64
	var x43 uint64
	x43, x42 = bits.Mul64(x30, 0xb9feffffffffaaab)
	var x44 uint64
	var x45 fiatFpMontUint1
	x44, x45 = fiatFpMontAddcarryxU64(x43, x40, 0x0)
	var x46 uint64
	var x47 fiatFpMontUint1
	x46, x47 = fiatFpMontAddcarryxU64(x41, x38, x45)
	var x48 uint64
	var x49 fiatFpMontUint1
	x48, x49 = fiatFpMontAddcarryxU64(x39, x36, x47)
	var x50 uint64
	var x51 fiatFpMontUint1
	x50, x51 = fiatFpMontAddcarryxU64(x37, x34, x49)
	var x52 uint64
	var x53 fiatFpMontUint1
	x52, x53 = fiatFpMontAddcarryxU64(x35, x32, x51)
	x54 := (uint64(x53) + x33)
	var x56 fiatFpMontUint1
	_, x56 = fiatFpMontAddcarryxU64(x17, x42, 0x0)
	var x57 uint64
	var x58 fiatFpMontUint1
	x57, x58 = fiatFpMontAddcarryxU64(x19, x44, x56)
	var x59 uint64
	var x60 fiatFpMontUint1
	x59, x60 = fiatFpMontAddcarryxU64(x21, x46, x58)
	var x61 uint64
	var x62 fiatFpMontUint1
	x61, x62 = fiatFpMontAddcarryxU64(x23, x48, x60)
	var x63 uint64
	var x64 fiatFpMontUint1
	x63, x64 = fiatFpMontAddcarryxU64(x25, x50, x62)
	var x65 uint64
	var x66 fiatFpMontUint1
	x65, x66 = fiatFpMontAddcarryxU64(x27, x52, x64)
	var x67 uint64
	var x68 fiatFpMontUint1
	x67, x68 = fiatFpMontAddcarryxU64(x29, x54, x66)
	var x69 uint64
	var x70 uint64
	x70, x69 = bits.Mul64(x1, arg2[5])
	var x71 uint64
	var x72 uint64
	x72, x71 = bits.Mul64(x1, arg2[4])
	var x73 uint64
	var x74 uint64
	x74, x73 = bits.Mul64(x1, arg2[3])
	var x75 uint64
	var x76 uint64
	x76, x75 = bits.Mul64(x1, arg2[2])
	var x77 uint64
	var x78 uint64
	x78, x77 = bits.Mul64(x1, arg2[1])
	var x79 uint64
	var x80 uint64
	x80, x79 = bits.Mul64(x1, arg2[0])
	var x81 uint64
	var x82 fiatFpMontUint1
	x81, x82 = fiatFpMontAddcarryxU64(x80, x77, 0x0)
	var x83 uint64
	var x84 fiatFpMontUint1
	x83, x84 = fiatFpMontAddcarryxU64(x78, x75, x82)
	var x85 uint64
	var x86 fiatFpMontUint1
	x85, x86 = fiatFpMontAddcarryxU64(x76, x73, x84)
	var x87 uint64
	var x88 fiatFpMontUint1
	x87, x88 = fiatFpMontAddcarryxU64(x74, x71, x86)
	var x89 uint64
	var x90 fiatFpMontUint1
	x89, x90 = fiatFpMontAddcarryxU64(x72, x69, x88)
	x91 := (uint64(x90) + x70)
	var x92 uint64
	var x93 fiatFpMontUint1
	x92, x93 = fiatFpMontAddcarryxU64(x57, x79, 0x0)
	var x94 uint64
	var x95 fiatFpMontUint1
	x94, x95 = fiatFpMontAddcarryxU64(x59, x81, x93)
	var x96 uint64
	var x97 fiatFpMontUint1
	x96, x97 = fiatFpMontAddcarryxU64(x61, x83, x95)
	var x98 uint64
	var x99 fiatFpMontUint1
	x98, x99 = fiatFpMontAddcarryxU64(x63, x85, x97)
	var x100 uint64
	var x101 fiatFpMontUint1
	x100, x101 = fiatFpMontAddcarryxU64(x65, x87, x99)
	var x102 uint64
	var x103 fiatFpMontUint1
	x102, x103 = fiatFpMontAddcarryxU64(x67, x89, x101)
	var x104 uint64
	var x105 fiatFpMontUint1
	x104, x105 = fiatFpMontAddcarryxU64(uint64(x68), x91, x103)
	var x106 uint64
	_, x106 = bits.Mul64(x92, 0x89f3fffcfffcfffd)
	var x108 uint64
	var x109 uint64
	x109, x108 = bits.Mul64(x106, 0x1a0111ea397fe69a)
	var x110 uint64
	var x111 uint64
	x111, x110 = bits.Mul64(x106, 0x4b1ba7b6434bacd7)
	var x112 uint64
	var x113 uint64
	x113, x112 = bits.Mul64(x106, 0x64774b84f38512bf)
	var x114 uint64
	var x115 uint64
	x115, x114 = bits.Mul64(x106, 0x6730d2a0f6b0f624)
	var x116 uint64
	var x117 uint64
	x117, x116 = bits.Mul64(x106, 0x1eabfffeb153ffff)
	var x118 uint64
	var x119 uint64
	x119, x118 = bits.Mul64(x106, 0xb9feffffffffaaab)
	var x120 uint64
	var x121 fiatFpMontUint1
	x120, x121 = fiatFpMontAddcarryxU64(x119, x116, 0x0)
	var x122 uint64
	var x123 fiatFpMontUint1
	x122, x123 = fiatFpMontAddcarryxU64(x117, x114, x121)
	var x124 uint64
	var x125 fiatFpMontUint1
	x124, x125 = fiatFpMontAddcarryxU64(x115, x112, x123)
	var x126 uint64
	var x127 fiatFpMontUint1
	x126, x127 = fiatFpMontAddcarryxU64(x113, x110, x125)
	var x128 uint64
	var x129 fiatFpMontUint1
	x128, x129 = fiatFpMontAddcarryxU64(x111, x108, x127)
	x130 := (uint64(x129) + x109)
	var x132 fiatFpMontUint1
	_, x132 = fiatFpMontAddcarryxU64(x92, x118, 0x0)
	var x133 uint64
	var x134 fiatFpMontUint1
	x133, x134 = fiatFpMontAddcarryxU64(x94, x120, x132)
	var x135 uint64
	var x136 fiatFpMontUint1
	x135, x136 = fiatFpMontAddcarryxU64(x96, x122, x134)
	var x137 uint64
	var x138 fiatFpMontUint1
	x137, x138 = fiatFpMontAddcarryxU64(x98, x124, x136)
	var x139 uint64
	var x140 fiatFpMontUint1
	x139, x140 = fiatFpMontAddcarryxU64(x100, x126, x138)
	var x141 uint64
	var x142 fiatFpMontUint1
	x141, x142 = fiatFpMontAddcarryxU64(x102, x128, x140)
	var x143 uint64
	var x144 fiatFpMontUint1
	x143, x144 = fiatFpMontAddcarryxU64(x104, x130, x142)
	x145 := (uint64(x144) + uint64(x105))
	var x146 uint64
	var x147 uint64
	x147, x146 = bits.Mul64(x2, arg2[5])
	var x148 uint64
	var x149 uint64
	x149, x148 = bits.Mul64(x2, arg2[4])
	var x150 uint64
	var x151 uint64
	x151, x150 = bits.Mul64(x2, arg2[3])
	var x152 uint64
	var x153 uint64
	x153, x152 = bits.Mul64(x2, arg2[2])
	var x154 uint64
	var x155 uint64
	x155, x154 = bits.Mul64(x2, arg2[1])
	var x156 uint64
	var x157 uint64
	x157, x156 = bits.Mul64(x2, arg2[0])
	var x158 uint64
	var x159 fiatFpMontUint1
	x158, x159 = fiatFpMontAddcarryxU64(x157, x154, 0x0)
	var x160 uint64
	var x161 fiatFpMontUint1
	x160, x161 = fiatFpMontAddcarryxU64(x155, x152, x159)
	var x162 uint64
	var x163 fiatFpMontUint1
	x162, x163 = fiatFpMontAddcarryxU64(x153, x150, x161)
	var x164 uint64
	var x165 fiatFpMontUint1
	x164, x165 = fiatFpMontAddcarryxU64(x151, x148, x163)
	var x166 uint64
	var x167 fiatFpMontUint1
	x166, x167 = fiatFpMontAddcarryxU64(x149, x146, x165)
	x168 := (uint64(x167) + x147)
	var x169 uint64
	var x170 fiatFpMontUint1
	x169, x170 = fiatFpMontAddcarryxU64(x133, x156, 0x0)
	var x171 uint64
	var x172 fiatFpMontUint1
	x171, x172 = fiatFpMontAddcarryxU64(x135, x158, x170)
	var x173 uint64
	var x174 fiatFpMontUint1
	x173, x174 = fiatFpMontAddcarryxU64(x137, x160, x172)
	var x175 uint64
	var x176 fiatFpMontUint1
	x175, x176 = fiatFpMontAddcarryxU64(x139, x162, x174)
	var x177 uint64
	var x178 fiatFpMontUint1
	x177, x178 = fiatFpMontAddcarryxU64(x141, x164, x176)
	var x179 uint64
	var x180 fiatFpMontUint1
	x179, x180 = fiatFpMontAddcarryxU64(x143, x166, x178)
	var x181 uint64
	var x182 fiatFpMontUint1
	x181, x182 = fiatFpMontAddcarryxU64(x145, x168, x180)
	var x183 uint64
	_, x183 = bits.Mul64(x169, 0x89f3fffcfffcfffd)
	var x185 uint64
	var x186 uint64
	x186, x185 = bits.Mul64(x183, 0x1a0111ea397fe69a)
	var x187 uint64
	var x188 uint64
	x188, x187 = bits.Mul64(x183, 0x4b1ba7b6434bacd7)
	var x189 uint64
	var x190 uint64
	x190, x189 = bits.Mul64(x183, 0x64774b84f38512bf)
	var x191 uint64
	var x192 uint64
	x192, x191 = bits.Mul64(x183, 0x6730d2a0f6b0f624)
	var x193 uint64
	var x194 uint64
	x194, x193 = bits.Mul64(x183, 0x1eabfffeb153ffff)
	var x195 uint64
	var x196 uint64
	x196, x195 = bits.Mul64(x183, 0xb9feffffffffaaab)
	var x197 uint64
	var x198 fiatFpMontUint1
	x197, x198 = fiatFpMontAddcarryxU64(x196, x193, 0x0)
	var x199 uint64
	var x200 fiatFpMontUint1
	x199, x200 = fiatFpMontAddcarryxU64(x194, x191, x198)
	var x201 uint64
	var x202 fiatFpMontUint1
	x201, x202 = fiatFpMontAddcarryxU64(x192, x189, x200)
	var x203 uint64
	var x204 fiatFpMontUint1
	x203, x204 = fiatFpMontAddcarryxU64(x190, x187, x202)
	var x205 uint64
	var x206 fiatFpMontUint1
	x205, x206 = fiatFpMontAddcarryxU64(x188, x185, x204)
	x207 := (uint64(x206) + x186)
	var x209 fiatFpMontUint1
	_, x209 = fiatFpMontAddcarryxU64(x169, x195, 0x0)
	var x210 uint64
	var x211 fiatFpMontUint1
	x210, x211 = fiatFpMontAddcarryxU64(x171, x197, x209)
	var x212 uint64
	var x213 fiatFpMontUint1
	x212, x213 = fiatFpMontAddcarryxU64(x173, x199, x211)
	var x214 uint64
	var x215 fiatFpMontUint1
	x214, x215 = fiatFpMontAddcarryxU64(x175, x201, x213)
	var x216 uint64
	var x217 fiatFpMontUint1
	x216, x217 = fiatFpMontAddcarryxU64(x177, x203, x215)
	var x218 uint64
	var x219 fiatFpMontUint1
	x218, x219 = fiatFpMontAddcarryxU64(x179, x205, x217)
	var x220 uint64
	var x221 fiatFpMontUint1
	x220, x221 = fiatFpMontAddcarryxU64(x181, x207, x219)
	x222 := (uint64(x221) + uint64(x182))
	var x223 uint64
	var x224 uint64
	x224, x223 = bits.Mul64(x3, arg2[5])
	var x225 uint64
	var x226 uint64
	x226, x225 = bits.Mul64(x3, arg2[4])
	var x227 uint64
	var x228 uint64
	x228, x227 = bits.Mul64(x3, arg2[3])
	var x229 uint64
	var x230 uint64
	x230, x229 = bits.Mul64(x3, arg2[2])
	var x231 uint64
	var x232 uint64
	x232, x231 = bits.Mul64(x3, arg2[1])
	var x233 uint64
	var x234 uint64
	x234, x233 = bits.Mul64(x3, arg2[0])
	var x235 uint64
	var x236 fiatFpMontUint1
	x235, x236 = fiatFpMontAddcarryxU64(x234, x231, 0x0)
	var x237 uint64
	var x238 fiatFpMontUint1
	x237, x238 = fiatFpMontAddcarryxU64(x232, x229, x236)
	var x239 uint64
	var x240 fiatFpMontUint1
	x239, x240 = fiatFpMontAddcarryxU64(x230, x227, x238)
	var x241 uint64
	var x242 fiatFpMontUint1
	x241, x242 = fiatFpMontAddcarryxU64(x228, x225, x240)
	var x243 uint64
	var x244 fiatFpMontUint1
	x243, x244 = fiatFpMontAddcarryxU64(x226, x223, x242)
	x245 := (uint64(x244) + x224)
	var x246 uint64
	var x247 fiatFpMontUint1
	x246, x247 = fiatFpMontAddcarryxU64(x210, x233, 0x0)
	var x248 uint64
	var x249 fiatFpMontUint1
	x248, x249 = fiatFpMontAddcarryxU64(x212, x235, x247)
	var x250 uint64
	var x251 fiatFpMontUint1
	x250, x251 = fiatFpMontAddcarryxU64(x214, x237, x249)
	var x252 uint64
	var x253 fiatFpMontUint1
	x252, x253 = fiatFpMontAddcarryxU64(x216, x239, x251)
	var x254 uint64
	var x255 fiatFpMontUint1
	x254, x255 = fiatFpMontAddcarryxU64(x218, x241, x253)
	var x256 uint64
	var x257 fiatFpMontUint1
	x256, x257 = fiatFpMontAddcarryxU64(x220, x243, x255)
	var x258 uint64
	var x259 fiatFpMontUint1
	x258, x259 = fiatFpMontAddcarryxU64(x222, x245, x257)
	var x260 uint64
	_, x260 = bits.Mul64(x246, 0x89f3fffcfffcfffd)
	var x262 uint64
	var x263 uint64
	x263, x262 = bits.Mul64(x260, 0x1a0111ea397fe69a)
	var x264 uint64
	var x265 uint64
	x265, x264 = bits.Mul64(x260, 0x4b1ba7b6434bacd7)
	var x266 uint64
	var x267 uint64
	x267, x266 = bits.Mul64(x260, 0x64774b84f38512bf)
	var x268 uint64
	var x269 uint64
	x269, x268 = bits.Mul64(x260, 0x6730d2a0f6b0f624)
	var x270 uint64
	var x271 uint64
	x271, x270 = bits.Mul64(x260, 0x1eabfffeb153ffff)
	var x272 uint64
	var x273 uint64
	x273, x272 = bits.Mul64(x260, 0xb9feffffffffaaab)
	var x274 uint64
	var x275 fiatFpMontUint1
	x274, x275 = fiatFpMontAddcarryxU64(x273, x270, 0x0)
	var x276 uint64
	var x277 fiatFpMontUint1
	x276, x277 = fiatFpMontAddcarryxU64(x271, x268, x275)
	var x278 uint64
	var x279 fiatFpMontUint1
	x278, x279 = fiatFpMontAddcarryxU64(x269, x266, x277)
	var x280 uint64
	var x281 fiatFpMontUint1
	x280, x281 = fiatFpMontAddcarryxU64(x267, x264, x279)
	var x282 uint64
	var x283 fiatFpMontUint1
	x282, x283 = fiatFpMontAddcarryxU64(x265, x262, x281)
	x284 := (uint64(x283) + x263)
	var x286 fiatFpMontUint1
	_, x286 = fiatFpMontAddcarryxU64(x246, x272, 0x0)
	var x287 uint64
	var x288 fiatFpMontUint1
	x287, x288 = fiatFpMontAddcarryxU64(x248, x274, x286)
	var x289 uint64
	var x290 fiatFpMontUint1
	x289, x290 = fiatFpMontAddcarryxU64(x250, x276, x288)
	var x291 uint64
	var x292 fiatFpMontUint1
	x291, x292 = fiatFpMontAddcarryxU64(x252, x278, x290)
	var x293 uint64
	var x294 fiatFpMontUint1
	x293, x294 = fiatFpMontAddcarryxU64(x254, x280, x292)
	var x295 uint64
	var x296 fiatFpMontUint1
	x295, x296 = fiatFpMontAddcarryxU64(x256, x282, x294)
	var x297 uint64
	var x298 fiatFpMontUint1
	x297, x298 = fiatFpMontAddcarryxU64(x258, x284, x296)
	x299 := (uint64(x298) + uint64(x259))
	var x300 uint64
	var x301 uint64
	x301, x300 = bits.Mul64(x4, arg2[5])
	var x302 uint64
	var x303 uint64
	x303, x302 = bits.Mul64(x4, arg2[4])
	var x304 uint64
	var x305 uint64
	x305, x304 = bits.Mul64(x4, arg2[3])
	var x306 uint64
	var x307 uint64
	x307, x306 = bits.Mul64(x4, arg2[2])
	var x308 uint64
	var x309 uint64
	x309, x308 = bits.Mul64(x4, arg2[1])
	var x310 uint64
	var x311 uint64
	x311, x310 = bits.Mul64(x4, arg2[0])
	var x312 uint64
	var x313 fiatFpMontUint1
	x312, x313 = fiatFpMontAddcarryxU64(x311, x308, 0x0)
	var x314 uint64
	var x315 fiatFpMontUint1
	x314, x315 = fiatFpMontAddcarryxU64(x309, x306, x313)
	var x316 uint64
	var x317 fiatFpMontUint1
	x316, x317 = fiatFpMontAddcarryxU64(x307, x304, x315)
	var x318 uint64
	var x319 fiatFpMontUint1
	x318, x319 = fiatFpMontAddcarryxU64(x305, x302, x317)
	var x320 uint64
	var x321 fiatFpMontUint1
	x320, x321 = fiatFpMontAddcarryxU64(x303, x300, x319)
	x322 := (uint64(x321) + x301)
	var x323 uint64
	var x324 fiatFpMontUint1
	x323, x324 = fiatFpMontAddcarryxU64(x287, x310, 0x0)
	var x325 uint64
	var x326 fiatFpMontUint1
	x325, x326 = fiatFpMontAddcarryxU64(x289, x312, x324)
	var x327 uint64
	var x328 fiatFpMontUint1
	x327, x328 = fiatFpMontAddcarryxU64(x291, x314, x326)
	var x329 uint64
	var x330 fiatFpMontUint1
	x329, x330 = fiatFpMontAddcarryxU64(x293, x316, x328)
	var x331 uint64
	var x332 fiatFpMontUint1
	x331, x332 = fiatFpMontAddcarryxU64(x295, x318, x330)
	var x333 uint64
	var x334 fiatFpMontUint1
	x333, x334 = fiatFpMontAddcarryxU64(x297, x320, x332)
	var x335 uint64
	var x336 fiatFpMontUint1
	x335, x336 = fiatFpMontAddcarryxU64(x299, x322, x334)
	var x337 uint64
	_, x337 = bits.Mul64(x323, 0x89f3fffcfffcfffd)
	var x339 uint64
	var x340 uint64
	x340, x339 = bits.Mul64(x337, 0x1a0111ea397fe69a)
	var x341 uint64
	var x342 uint64
	x342, x341 = bits.Mul64(x337, 0x4b1ba7b6434bacd7)
	var x343 uint64
	var x344 uint64
	x344, x343 = bits.Mul64(x337, 0x64774b84f38512bf)
	var x345 uint64
	var x346 uint64
	x346, x345 = bits.Mul64(x337, 0x6730d2a0f6b0f624)
	var x347 uint64
	var x348 uint64
	x348, x347 = bits.Mul64(x337, 0x1eabfffeb153ffff)
	var x349 uint64
	var x350 uint64
	x350, x349 = bits.Mul64(x337, 0xb9feffffffffaaab)
	var x351 uint64
	var x352 fiatFpMontUint1
	x351, x352 = fiatFpMontAddcarryxU64(x350, x347, 0x0)
	var x353 uint64
	var x354 fiatFpMontUint1
	x353, x354 = fiatFpMontAddcarryxU64(x348, x345, x352)
	var x355 uint64
	var x356 fiatFpMontUint1
	x355, x356 = fiatFpMontAddcarryxU64(x346, x343, x354)
	var x357 uint64
	var x358 fiatFpMontUint1
	x357, x358 = fiatFpMontAddcarryxU64(x344, x341, x356)
	var x359 uint64
	var x360 fiatFpMontUint1
	x359, x360 = fiatFpMontAddcarryxU64(x342, x339, x358)
	x361 := (uint64(x360) + x340)
	var x363 fiatFpMontUint1
	_, x363 = fiatFpMontAddcarryxU64(x323, x349, 0x0)
	var x364 uint64
	var x365 fiatFpMontUint1
	x364, x365 = fiatFpMontAddcarryxU64(x325, x351, x363)
	var x366 uint64
	var x367 fiatFpMontUint1
	x366, x367 = fiatFpMontAddcarryxU64(x327, x353, x365)
	var x368 uint64
	var x369 fiatFpMontUint1
	x368, x369 = fiatFpMontAddcarryxU64(x329, x355, x367)
	var x370 uint64
	var x371 fiatFpMontUint1
	x370, x371 = fiatFpMontAddcarryxU64(x331, x357, x369)
	var x372 uint64
	var x373 fiatFpMontUint1
	x372, x373 = fiatFpMontAddcarryxU64(x333, x359, x371)
	var x374 uint64
	var x375 fiatFpMontUint1
	x374, x375 = fiatFpMontAddcarryxU64(x335, x361, x373)
	x376 := (uint64(x375) + uint64(x336))
	var x377 uint64
	var x378 uint64
	x378, x377 = bits.Mul64(x5, arg2[5])
	var x379 uint64
	var x380 uint64
	x380, x379 = bits.Mul64(x5, arg2[4])
	var x381 uint64
	var x382 uint64
	x382, x381 = bits.Mul64(x5, arg2[3])
	var x383 uint64
	var x384 uint64
	x384, x383 = bits.Mul64(x5, arg2[2])
	var x385 uint64
	var x386 uint64
	x386, x385 = bits.Mul64(x5, arg2[1])
	var x387 uint64
	var x388 uint64
	x388, x387 = bits.Mul64(x5, arg2[0])
	var x389 uint64
	var x390 fiatFpMontUint1
	x389, x390 = fiatFpMontAddcarryxU64(x388, x385, 0x0)
	var x391 uint64
	var x392 fiatFpMontUint1
	x391, x392 = fiatFpMontAddcarryxU64(x386, x383, x390)
	var x393 uint64
	var x394 fiatFpMontUint1
	x393, x394 = fiatFpMontAddcarryxU64(x384, x381, x392)
	var x395 uint64
	var x396 fiatFpMontUint1
	x395, x396 = fiatFpMontAddcarryxU64(x382, x379, x394)
	var x397 uint64
	var x398 fiatFpMontUint1
	x397, x398 = fiatFpMontAddcarryxU64(x380, x377, x396)
	x399 := (uint64(x398) + x378)
	var x400 uint64
	var x401 fiatFpMontUint1
	x400, x401 = fiatFpMontAddcarryxU64(x364, x387, 0x0)
	var x402 uint64
	var x403 fiatFpMontUint1
	x402, x403 = fiatFpMontAddcarryxU64(x366, x389, x401)
	var x404 uint64
	var x405 fiatFpMontUint1
	x404, x405 = fiatFpMontAddcarryxU64(x368, x391, x403)
	var x406 uint64
	var x407 fiatFpMontUint1
	x406, x407 = fiatFpMontAddcarryxU64(x370, x393, x405)
	var x408 uint64
	var x409 fiatFpMontUint1
	x408, x409 = fiatFpMontAddcarryxU64(x372, x395, x407)
	var x410 uint64
	var x411 fiatFpMontUint1
	x410, x411 = fiatFpMontAddcarryxU64(x374, x397, x409)
	var x412 uint64
	var x413 fiatFpMontUint1
	x412, x413 = fiatFpMontAddcarryxU64(x376, x399, x411)
	var x414 uint64
	_, x414 = bits.Mul64(x400, 0x89f3fffcfffcfffd)
	var x416 uint64
	var x417 uint64
	x417, x416 = bits.Mul64(x414, 0x1a0111ea397fe69a)
	var x418 uint64
	var x419 uint64
	x419, x418 = bits.Mul64(x414, 0x4b1ba7b6434bacd7)
	var x420 uint64
	var x421 uint64
	x421, x420 = bits.Mul64(x414, 0x64774b84f38512bf)
	var x422 uint64
	var x423 uint64
	x423, x422 = bits.Mul64(x414, 0x6730d2a0f6b0f624)
	var x424 uint64
	var x425 uint64
	x425, x424 = bits.Mul64(x414, 0x1eabfffeb153ffff)
	var x426 uint64
	var x427 uint64
	x427, x426 = bits.Mul64(x414, 0xb9feffffffffaaab)
	var x428 uint64
	var x429 fiatFpMontUint1
	x428, x429 = fiatFpMontAddcarryxU64(x427, x424, 0x0)
	var x430 uint64
	var x431 fiatFpMontUint1
	x430, x431 = fiatFpMontAddcarryxU64(x425, x422, x429)
	var x432 uint64
	var x433 fiatFpMontUint1
	x432, x433 = fiatFpMontAddcarryxU64(x423, x420, x431)
	var x434 uint64
	var x435 fiatFpMontUint1
	x434, x435 = fiatFpMontAddcarryxU64(x421, x418, x433)
	var x436 uint64
	var x437 fiatFpMontUint1
	x436, x437 = fiatFpMontAddcarryxU64(x419, x416, x435)
	x438 := (uint64(x437) + x417)
	var x440 fiatFpMontUint1
	_, x440 = fiatFpMontAddcarryxU64(x400, x426, 0x0)
	var x441 uint64
	var x442 fiatFpMontUint1
	x441, x442 = fiatFpMontAddcarryxU64(x402, x428, x440)
	var x443 uint64
	var x444 fiatFpMontUint1
	x443, x444 = fiatFpMontAddcarryxU64(x404, x430, x442)
	var x445 uint64
	var x446 fiatFpMontUint1
	x445, x446 = fiatFpMontAddcarryxU64(x406, x432, x444)
	var x447 uint64
	var x448 fiatFpMontUint1
	x447, x448 = fiatFpMontAddcarryxU64(x408, x434, x446)
	var x449 uint64
	var x450 fiatFpMontUint1
	x449, x450 = fiatFpMontAddcarryxU64(x410, x436, x448)
	var x451 uint64
	var x452 fiatFpMontUint1
	x451, x452 = fiatFpMontAddcarryxU64(x412, x438, x450)
	x453 := (uint64(x452) + uint64(x413))
	var x454 uint64
	var x455 fiatFpMontUint1
	x454, x455 = fiatFpMontSubborrowxU64(x441, 0xb9feffffffffaaab, 0x0)
	var x456 uint64
	var x457 fiatFpMontUint1
	x456, x457 = fiatFpMontSubborrowxU64(x443, 0x1eabfffeb153ffff, x455)
	var x458 uint64
	var x459 fiatFpMontUint1
	x458, x459 = fiatFpMontSubborrowxU64(x445, 0x6730d2a0f6b0f624, x457)
	var x460 uint64
	var x461 fiatFpMontUint1
	x460, x461 = fiatFpMontSubborrowxU64(x447, 0x64774b84f38512bf, x459)
	var x462 uint64
	var x463 fiatFpMontUint1
	x462, x463 = fiatFpMontSubborrowxU64(x449, 0x4b1ba7b6434bacd7, x461)
	var x464 uint64
	var x465 fiatFpMontUint1
	x464, x465 = fiatFpMontSubborrowxU64(x451, 0x1a0111ea397fe69a, x463)
	var x467 fiatFpMontUint1
	_, x467 = fiatFpMontSubborrowxU64(x453, uint64(0x0), x465)
	var x468 uint64
	fiatFpMontCmovznzU64(&x468, x467, x454, x441)
	var x469 uint64
	fiatFpMontCmovznzU64(&x469, x467, x456, x443)
	var x470 uint64
	fiatFpMontCmovznzU64(&x470, x467, x458, x445)
	var x471 uint64
	fiatFpMontCmovznzU64(&x471, x467, x460, x447)
	var x472 uint64
	fiatFpMontCmovznzU64(&x472, x467, x462, x449)
	var x473 uint64
	fiatFpMontCmovznzU64(&x473, x467, x464, x451)
	out1[0] = x468
	out1[1] = x469
	out1[2] = x470
	out1[3] = x471
	out1[4] = x472
	out1[5] = x473
}

// The function fiatFpMontSquare squares a field element in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg1)) mod m
//   0 ≤ eval out1 < m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
func fiatFpMontSquare(out1 *[6]uint64, arg1 *[6]uint64) {
	x1 := arg1[1]
	x2 := arg1[2]
	x3 := arg1[3]
	x4 := arg1[4]
	x5 := arg1[5]
	x6 := arg1[0]
	var x7 uint64
	var x8 uint64
	x8, x7 = bits.Mul64(x6, arg1[5])
	var x9 uint64
	var x10 uint64
	x10, x9 = bits.Mul64(x6, arg1[4])
	var x11 uint64
	var x12 uint64
	x12, x11 = bits.Mul64(x6, arg1[3])
	var x13 uint64
	var x14 uint64
	x14, x13 = bits.Mul64(x6, arg1[2])
	var x15 uint64
	var x16 uint64
	x16, x15 = bits.Mul64(x6, arg1[1])
	var x17 uint64
	var x18 uint64
	x18, x17 = bits.Mul64(x6, arg1[0])
	var x19 uint64
	var x20 fiatFpMontUint1
	x19, x20 = fiatFpMontAddcarryxU64(x18, x15, 0x0)
	var x21 uint64
	var x22 fiatFpMontUint1
	x21, x22 = fiatFpMontAddcarryxU64(x16, x13, x20)
	var x23 uint64
	var x24 fiatFpMontUint1
	x23, x24 = fiatFpMontAddcarryxU64(x14, x11, x22)
	var x25 uint64
	var x26 fiatFpMontUint1
	x25, x26 = fiatFpMontAddcarryxU64(x12, x9, x24)
	var x27 uint64
	var x28 fiatFpMontUint1
	x27, x28 = fiatFpMontAddcarryxU64(x10, x7, x26)
	x29 := (uint64(x28) + x8)
	var x30 uint64
	_, x30 = bits.Mul64(x17, 0x89f3fffcfffcfffd)
	var x32 uint64
	var x33 uint64
	x33, x32 = bits.Mul64(x30, 0x1a0111ea397fe69a)
	var x34 uint64
	var x35 uint64
	x35, x34 = bits.Mul64(x30, 0x4b1ba7b6434bacd7)
	var x36 uint64
	var x37 uint64
	x37, x36 = bits.Mul64(x30, 0x64774b84f38512bf)
	var x38 uint64
	var x39 uint64
	x39, x38 = bits.Mul64(x30, 0x6730d2a0f6b0f624)
	var x40 uint64
	var x41 uint64
	x41, x40 = bits.Mul64(x30, 0x1eabfffeb153ffff)
	var x42 uint64
	var x43 uint64
	x43, x42 = bits.Mul64(x30, 0xb9feffffffffaaab)
	var x44 uint64
	var x45 fiatFpMontUint1
	x44, x45 = fiatFpMontAddcarryxU64(x43, x40, 0x0)
	var x46 uint64
	var x47 fiatFpMontUint1
	x46, x47 = fiatFpMontAddcarryxU64(x41, x38, x45)
	var x48 uint64
	var x49 fiatFpMontUint1
	x48, x49 = fiatFpMontAddcarryxU64(x39, x36, x47)
	var x50 uint64
	var x51 fiatFpMontUint1
	x50, x51 = fiatFpMontAddcarryxU64(x37, x34, x49)
	var x52 uint64
	var x53 fiatFpMontUint1
	x52, x53 = fiatFpMontAddcarryxU64(x35, x32, x51)
	x54 := (uint64(x53) + x33)
	var x56 fiatFpMontUint1
	_, x56 = fiatFpMontAddcarryxU64(x17, x42, 0x0)
	var x57 uint64
	var x58 fiatFpMontUint1
	x57, x58 = fiatFpMontAddcarryxU64(x19, x44, x56)
	var x59 uint64
	var x60 fiatFpMontUint1
	x59, x60 = fiatFpMontAddcarryxU64(x21, x46, x58)
	var x61 uint64
	var x62 fiatFpMontUint1
	x61, x62 = fiatFpMontAddcarryxU64(x23, x48, x60)
	var x63 uint64
	var x64 fiatFpMontUint1
	x63, x64 = fiatFpMontAddcarryxU64(x25, x50, x62)
	var x65 uint64
	var x66 fiatFpMontUint1
	x65, x66 = fiatFpMontAddcarryxU64(x27, x52, x64)
	var x67 uint64
	var x68 fiatFpMontUint1
	x67, x68 = fiatFpMontAddcarryxU64(x29, x54, x66)
	var x69 uint64
	var x70 uint64
	x70, x69 = bits.Mul64(x1, arg1[5])
	var x71 uint64
	var x72 uint64
	x72, x71 = bits.Mul64(x1, arg1[4])
	var x73 uint64
	var x74 uint64
	x74, x73 = bits.Mul64(x1, arg1[3])
	var x75 uint64
	var x76 uint64
	x76, x75 = bits.Mul64(x1, arg1[2])
	var x77 uint64
	var x78 uint64
	x78, x77 = bits.Mul64(x1, arg1[1])
	var x79 uint64
	var x80 uint64
	x80, x79 = bits.Mul64(x1, arg1[0])
	var x81 uint64
	var x82 fiatFpMontUint1
	x81, x82 = fiatFpMontAddcarryxU64(x80, x77, 0x0)
	var x83 uint64
	var x84 fiatFpMontUint1
	x83, x84 = fiatFpMontAddcarryxU64(x78, x75, x82)
	var x85 uint64
	var x86 fiatFpMontUint1
	x85, x86 = fiatFpMontAddcarryxU64(x76, x73, x84)
	var x87 uint64
	var x88 fiatFpMontUint1
	x87, x88 = fiatFpMontAddcarryxU64(x74, x71, x86)
	var x89 uint64
	var x90 fiatFpMontUint1
	x89, x90 = fiatFpMontAddcarryxU64(x72, x69, x88)
	x91 := (uint64(x90) + x70)
	var x92 uint64
	var x93 fiatFpMontUint1
	x92, x93 = fiatFpMontAddcarryxU64(x57, x79, 0x0)
	var x94 uint64
	var x95 fiatFpMontUint1
	x94, x95 = fiatFpMontAddcarryxU64(x59, x81, x93)
	var x96 uint64
	var x97 fiatFpMontUint1
	x96, x97 = fiatFpMontAddcarryxU64(x61, x83, x95)
	var x98 uint64
	var x99 fiatFpMontUint1
	x98, x99 = fiatFpMontAddcarryxU64(x63, x85, x97)
	var x100 uint64
	var x101 fiatFpMontUint1
	x100, x101 = fiatFpMontAddcarryxU64(x65, x87, x99)
	var x102 uint64
	var x103 fiatFpMontUint1
	x102, x103 = fiatFpMontAddcarryxU64(x67, x89, x101)
	var x104 uint64
	var x105 fiatFpMontUint1
	x104, x105 = fiatFpMontAddcarryxU64(uint64(x68), x91, x103)
	var x106 uint64
	_, x106 = bits.Mul64(x92, 0x89f3fffcfffcfffd)
	var x108 uint64
	var x109 uint64
	x109, x108 = bits.Mul64(x106, 0x1a0111ea397fe69a)
	var x110 uint64
	var x111 uint64
	x111, x110 = bits.Mul64(x106, 0x4b1ba7b6434bacd7)
	var x112 uint64
	var x113 uint64
	x113, x112 = bits.Mul64(x106, 0x64774b84f38512bf)
	var x114 uint64
	var x115 uint64
	x115, x114 = bits.Mul64(x106, 0x6730d2a0f6b0f624)
	var x116 uint64
	var x117 uint64
	x117, x116 = bits.Mul64(x106, 0x1eabfffeb153ffff)
	var x118 uint64
	var x119 uint64
	x119, x118 = bits.Mul64(x106, 0xb9feffffffffaaab)
	var x120 uint64
	var x121 fiatFpMontUint1
	x120, x121 = fiatFpMontAddcarryxU64(x119, x116, 0x0)
	var x122 uint64
	var x123 fiatFpMontUint1
	x122, x123 = fiatFpMontAddcarryxU64(x117, x114, x121)
	var x124 uint64
	var x125 fiatFpMontUint1
	x124, x125 = fiatFpMontAddcarryxU64(x115, x112, x123)
	var x126 uint64
	var x127 fiatFpMontUint1
	x126, x127 = fiatFpMontAddcarryxU64(x113, x110, x125)
	var x128 uint64
	var x129 fiatFpMontUint1
	x128, x129 = fiatFpMontAddcarryxU64(x111, x108, x127)
	x130 := (uint64(x129) + x109)
	var x132 fiatFpMontUint1
	_, x132 = fiatFpMontAddcarryxU64(x92, x118, 0x0)
	var x133 uint64
	var x134 fiatFpMontUint1
	x133, x134 = fiatFpMontAddcarryxU64(x94, x120, x132)
	var x135 uint64
	var x136 fiatFpMontUint1
	x135, x136 = fiatFpMontAddcarryxU64(x96, x122, x134)
	var x137 uint64
	var x138 fiatFpMontUint1
	x137, x138 = fiatFpMontAddcarryxU64(x98, x124, x136)
	var x139 uint64
	var x140 fiatFpMontUint1
	x139, x140 = fiatFpMontAddcarryxU64(x100, x126, x138)
	var x141 uint64
	var x142 fiatFpMontUint1
	x141, x142 = fiatFpMontAddcarryxU64(x102, x128, x140)
	var x143 uint64
	var x144 fiatFpMontUint1
	x143, x144 = fiatFpMontAddcarryxU64(x104, x130, x142)
	x145 := (uint64(x144) + uint64(x105))
	var x146 uint64
	var x147 uint64
	x147, x146 = bits.Mul64(x2, arg1[5])
	var x148 uint64
	var x149 uint64
	x149, x148 = bits.Mul64(x2, arg1[4])
	var x150 uint64
	var x151 uint64
	x151, x150 = bits.Mul64(x2, arg1[3])
	var x152 uint64
	var x153 uint64
	x153, x152 = bits.Mul64(x2, arg1[2])
	var x154 uint64
	var x155 uint64
	x155, x154 = bits.Mul64(x2, arg1[1])
	var x156 uint64
	var x157 uint64
	x157, x156 = bits.Mul64(x2, arg1[0])
	var x158 uint64
	var x159 fiatFpMontUint1
	x158, x159 = fiatFpMontAddcarryxU64(x157, x154, 0x0)
	var x160 uint64
	var x161 fiatFpMontUint1
	x160, x161 = fiatFpMontAddcarryxU64(x155, x152, x159)
	var x162 uint64
	var x163 fiatFpMontUint1
	x162, x163 = fiatFpMontAddcarryxU64(x153, x150, x161)
	var x164 uint64
	var x165 fiatFpMontUint1
	x164, x165 = fiatFpMontAddcarryxU64(x151, x148, x163)
	var x166 uint64
	var x167 fiatFpMontUint1
	x166, x167 = fiatFpMontAddcarryxU64(x149, x146, x165)
	x168 := (uint64(x167) + x147)
	var x169 uint64
	var x170 fiatFpMontUint1
	x169, x170 = fiatFpMontAddcarryxU64(x133, x156, 0x0)
	var x171 uint64
	var x172 fiatFpMontUint1
	x171, x172 = fiatFpMontAddcarryxU64(x135, x158, x170)
	var x173 uint64
	var x174 fiatFpMontUint1
	x173, x174 = fiatFpMontAddcarryxU64(x137, x160, x172)
	var x175 uint64
	var x176 fiatFpMontUint1
	x175, x176 = fiatFpMontAddcarryxU64(x139, x162, x174)
	var x177 uint64
	var x178 fiatFpMontUint1
	x177, x178 = fiatFpMontAddcarryxU64(x141, x164, x176)
	var x179 uint64
	var x180 fiatFpMontUint1
	x179, x180 = fiatFpMontAddcarryxU64(x143, x166, x178)
	var x181 uint64
	var x182 fiatFpMontUint1
	x181, x182 = fiatFpMontAddcarryxU64(x145, x168, x180)
	var x183 uint64
	_, x183 = bits.Mul64(x169, 0x89f3fffcfffcfffd)
	var x185 uint64
	var x186 uint64
	x186, x185 = bits.Mul64(x183, 0x1a0111ea397fe69a)
	var x187 uint64
	var x188 uint64
	x188, x187 = bits.Mul64(x183, 0x4b1ba7b6434bacd7)
	var x189 uint64
	var x190 uint64
	x190, x189 = bits.Mul64(x183, 0x64774b84f38512bf)
	var x191 uint64
	var x192 uint64
	x192, x191 = bits.Mul64(x183, 0x6730d2a0f6b0f624)
	var x193 uint64
	var x194 uint64
	x194, x193 = bits.Mul64(x183, 0x1eabfffeb153ffff)
	var x195 uint64
	var x196 uint64
	x196, x195 = bits.Mul64(x183, 0xb9feffffffffaaab)
	var x197 uint64
	var x198 fiatFpMontUint1
	x197, x198 = fiatFpMontAddcarryxU64(x196, x193, 0x0)
	var x199 uint64
	var x200 fiatFpMontUint1
	x199, x200 = fiatFpMontAddcarryxU64(x194, x191, x198)
	var x201 uint64
	var x202 fiatFpMontUint1
	x201, x202 = fiatFpMontAddcarryxU64(x192, x189, x200)
	var x203 uint64
	var x204 fiatFpMontUint1
	x203, x204 = fiatFpMontAddcarryxU64(x190, x187, x202)
	var x205 uint64
	var x206 fiatFpMontUint1
	x205, x206 = fiatFpMontAddcarryxU64(x188, x185, x204)
	x207 := (uint64(x206) + x186)
	var x209 fiatFpMontUint1
	_, x209 = fiatFpMontAddcarryxU64(x169, x195, 0x0)
	var x210 uint64
	var x211 fiatFpMontUint1
	x210, x211 = fiatFpMontAddcarryxU64(x171, x197, x209)
	var x212 uint64
	var x213 fiatFpMontUint1
	x212, x213 = fiatFpMontAddcarryxU64(x173, x199, x211)
	var x214 uint64
	var x215 fiatFpMontUint1
	x214, x215 = fiatFpMontAddcarryxU64(x175, x201, x213)
	var x216 uint64
	var x217 fiatFpMontUint1
	x216, x217 = fiatFpMontAddcarryxU64(x177, x203, x215)
	var x218 uint64
	var x219 fiatFpMontUint1
	x218, x219 = fiatFpMontAddcarryxU64(x179, x205, x217)
	var x220 uint64
	var x221 fiatFpMontUint1
	x220, x221 = fiatFpMontAddcarryxU64(x181, x207, x219)
	x222 := (uint64(x221) + uint64(x182))
	var x223 uint64
	var x224 uint64
	x224, x223 = bits.Mul64(x3, arg1[5])
	var x225 uint64
	var x226 uint64
	x226, x225 = bits.Mul64(x3, arg1[4])
	var x227 uint64
	var x228 uint64
	x228, x227 = bits.Mul64(x3, arg1[3])
	var x229 uint64
	var x230 uint64
	x230, x229 = bits.Mul64(x3, arg1[2])
	var x231 uint64
	var x232 uint64
	x232, x231 = bits.Mul64(x3, arg1[1])
	var x233 uint64
	var x234 uint64
	x234, x233 = bits.Mul64(x3, arg1[0])
	var x235 uint64
	var x236 fiatFpMontUint1
	x235, x236 = fiatFpMontAddcarryxU64(x234, x231, 0x0)
	var x237 uint64
	var x238 fiatFpMontUint1
	x237, x238 = fiatFpMontAddcarryxU64(x232, x229, x236)
	var x239 uint64
	var x240 fiatFpMontUint1
	x239, x240 = fiatFpMontAddcarryxU64(x230, x227, x238)
	var x241 uint64
	var x242 fiatFpMontUint1
	x241, x242 = fiatFpMontAddcarryxU64(x228, x225, x240)
	var x243 uint64
	var x244 fiatFpMontUint1
	x243, x244 = fiatFpMontAddcarryxU64(x226, x223, x242)
	x245 := (uint64(x244) + x224)
	var x246 uint64
	var x247 fiatFpMontUint1
	x246, x247 = fiatFpMontAddcarryxU64(x210, x233, 0x0)
	var x248 uint64
	var x249 fiatFpMontUint1
	x248, x249 = fiatFpMontAddcarryxU64(x212, x235, x247)
	var x250 uint64
	var x251 fiatFpMontUint1
	x250, x251 = fiatFpMontAddcarryxU64(x214, x237, x249)
	var x252 uint64
	var x253 fiatFpMontUint1
	x252, x253 = fiatFpMontAddcarryxU64(x216, x239, x251)
	var x254 uint64
	var x255 fiatFpMontUint1
	x254, x255 = fiatFpMontAddcarryxU64(x218, x241, x253)
	var x256 uint64
	var x257 fiatFpMontUint1
	x256, x257 = fiatFpMontAddcarryxU64(x220, x243, x255)
	var x258 uint64
	var x259 fiatFpMontUint1
	x258, x259 = fiatFpMontAddcarryxU64(x222, x245, x257)
	var x260 uint64
	_, x260 = bits.Mul64(x246, 0x89f3fffcfffcfffd)
	var x262 uint64
	var x263 uint64
	x263, x262 = bits.Mul64(x260, 0x1a0111ea397fe69a)
	var x264 uint64
	var x265 uint64
	x265, x264 = bits.Mul64(x260, 0x4b1ba7b6434bacd7)
	var x266 uint64
	var x267 uint64
	x267, x266 = bits.Mul64(x260, 0x64774b84f38512bf)
	var x268 uint64
	var x269 uint64
	x269, x268 = bits.Mul64(x260, 0x6730d2a0f6b0f624)
	var x270 uint64
	var x271 uint64
	x271, x270 = bits.Mul64(x260, 0x1eabfffeb153ffff)
	var x272 uint64
	var x273 uint64
	x273, x272 = bits.Mul64(x260, 0xb9feffffffffaaab)
	var x274 uint64
	var x275 fiatFpMontUint1
	x274, x275 = fiatFpMontAddcarryxU64(x273, x270, 0x0)
	var x276 uint64
	var x277 fiatFpMontUint1
	x276, x277 = fiatFpMontAddcarryxU64(x271, x268, x275)
	var x278 uint64
	var x279 fiatFpMontUint1
	x278, x279 = fiatFpMontAddcarryxU64(x269, x266, x277)
	var x280 uint64
	var x281 fiatFpMontUint1
	x280, x281 = fiatFpMontAddcarryxU64(x267, x264, x279)
	var x282 uint64
	var x283 fiatFpMontUint1
	x282, x283 = fiatFpMontAddcarryxU64(x265, x262, x281)
	x284 := (uint64(x283) + x263)
	var x286 fiatFpMontUint1
	_, x286 = fiatFpMontAddcarryxU64(x246, x272, 0x0)
	var x287 uint64
	var x288 fiatFpMontUint1
	x287, x288 = fiatFpMontAddcarryxU64(x248, x274, x286)
	var x289 uint64
	var x290 fiatFpMontUint1
	x289, x290 = fiatFpMontAddcarryxU64(x250, x276, x288)
	var x291 uint64
	var x292 fiatFpMontUint1
	x291, x292 = fiatFpMontAddcarryxU64(x252, x278, x290)
	var x293 uint64
	var x294 fiatFpMontUint1
	x293, x294 = fiatFpMontAddcarryxU64(x254, x280, x292)
	var x295 uint64
	var x296 fiatFpMontUint1
	x295, x296 = fiatFpMontAddcarryxU64(x256, x282, x294)
	var x297 uint64
	var x298 fiatFpMontUint1
	x297, x298 = fiatFpMontAddcarryxU64(x258, x284, x296)
	x299 := (uint64(x298) + uint64(x259))
	var x300 uint64
	var x301 uint64
	x301, x300 = bits.Mul64(x4, arg1[5])
	var x302 uint64
	var x303 uint64
	x303, x302 = bits.Mul64(x4, arg1[4])
	var x304 uint64
	var x305 uint64
	x305, x304 = bits.Mul64(x4, arg1[3])
	var x306 uint64
	var x307 uint64
	x307, x306 = bits.Mul64(x4, arg1[2])
	var x308 uint64
	var x309 uint64
	x309, x308 = bits.Mul64(x4, arg1[1])
	var x310 uint64
	var x311 uint64
	x311, x310 = bits.Mul64(x4, arg1[0])
	var x312 uint64
	var x313 fiatFpMontUint1
	x312, x313 = fiatFpMontAddcarryxU64(x311, x308, 0x0)
	var x314 uint64
	var x315 fiatFpMontUint1
	x314, x315 = fiatFpMontAddcarryxU64(x309, x306, x313)
	var x316 uint64
	var x317 fiatFpMontUint1
	x316, x317 = fiatFpMontAddcarryxU64(x307, x304, x315)
	var x318 uint64
	var x319 fiatFpMontUint1
	x318, x319 = fiatFpMontAddcarryxU64(x305, x302, x317)
	var x320 uint64
	var x321 fiatFpMontUint1
	x320, x321 = fiatFpMontAddcarryxU64(x303, x300, x319)
	x322 := (uint64(x321) + x301)
	var x323 uint64
	var x324 fiatFpMontUint1
	x323, x324 = fiatFpMontAddcarryxU64(x287, x310, 0x0)
	var x325 uint64
	var x326 fiatFpMontUint1
	x325, x326 = fiatFpMontAddcarryxU64(x289, x312, x324)
	var x327 uint64
	var x328 fiatFpMontUint1
	x327, x328 = fiatFpMontAddcarryxU64(x291, x314, x326)
	var x329 uint64
	var x330 fiatFpMontUint1
	x329, x330 = fiatFpMontAddcarryxU64(x293, x316, x328)
	var x331 uint64
	var x332 fiatFpMontUint1
	x331, x332 = fiatFpMontAddcarryxU64(x295, x318, x330)
	var x333 uint64
	var x334 fiatFpMontUint1
	x333, x334 = fiatFpMontAddcarryxU64(x297, x320, x332)
	var x335 uint64
	var x336 fiatFpMontUint1
	x335, x336 = fiatFpMontAddcarryxU64(x299, x322, x334)
	var x337 uint64
	_, x337 = bits.Mul64(x323, 0x89f3fffcfffcfffd)
	var x339 uint64
	var x340 uint64
	x340, x339 = bits.Mul64(x337, 0x1a0111ea397fe69a)
	var x341 uint64
	var x342 uint64
	x342, x341 = bits.Mul64(x337, 0x4b1ba7b6434bacd7)
	var x343 uint64
	var x344 uint64
	x344, x343 = bits.Mul64(x337, 0x64774b84f38512bf)
	var x345 uint64
	var x346 uint64
	x346, x345 = bits.Mul64(x337, 0x6730d2a0f6b0f624)
	var x347 uint64
	var x348 uint64
	x348, x347 = bits.Mul64(x337, 0x1eabfffeb153ffff)
	var x349 uint64
	var x350 uint64
	x350, x349 = bits.Mul64(x337, 0xb9feffffffffaaab)
	var x351 uint64
	var x352 fiatFpMontUint1
	x351, x352 = fiatFpMontAddcarryxU64(x350, x347, 0x0)
	var x353 uint64
	var x354 fiatFpMontUint1
	x353, x354 = fiatFpMontAddcarryxU64(x348, x345, x352)
	var x355 uint64
	var x356 fiatFpMontUint1
	x355, x356 = fiatFpMontAddcarryxU64(x346, x343, x354)
	var x357 uint64
	var x358 fiatFpMontUint1
	x357, x358 = fiatFpMontAddcarryxU64(x344, x341, x356)
	var x359 uint64
	var x360 fiatFpMontUint1
	x359, x360 = fiatFpMontAddcarryxU64(x342, x339, x358)
	x361 := (uint64(x360) + x340)
	var x363 fiatFpMontUint1
	_, x363 = fiatFpMontAddcarryxU64(x323, x349, 0x0)
	var x364 uint64
	var x365 fiatFpMontUint1
	x364, x365 = fiatFpMontAddcarryxU64(x325, x351, x363)
	var x366 uint64
	var x367 fiatFpMontUint1
	x366, x367 = fiatFpMontAddcarryxU64(x327, x353, x365)
	var x368 uint64
	var x369 fiatFpMontUint1
	x368, x369 = fiatFpMontAddcarryxU64(x329, x355, x367)
	var x370 uint64
	var x371 fiatFpMontUint1
	x370, x371 = fiatFpMontAddcarryxU64(x331, x357, x369)
	var x372 uint64
	var x373 fiatFpMontUint1
	x372, x373 = fiatFpMontAddcarryxU64(x333, x359, x371)
	var x374 uint64
	var x375 fiatFpMontUint1
	x374, x375 = fiatFpMontAddcarryxU64(x335, x361, x373)
	x376 := (uint64(x375) + uint64(x336))
	var x377 uint64
	var x378 uint64
	x378, x377 = bits.Mul64(x5, arg1[5])
	var x379 uint64
	var x380 uint64
	x380, x379 = bits.Mul64(x5, arg1[4])
	var x381 uint64
	var x382 uint64
	x382, x381 = bits.Mul64(x5, arg1[3])
	var x383 uint64
	var x384 uint64
	x384, x383 = bits.Mul64(x5, arg1[2])
	var x385 uint64
	var x386 uint64
	x386, x385 = bits.Mul64(x5, arg1[1])
	var x387 uint64
	var x388 uint64
	x388, x387 = bits.Mul64(x5, arg1[0])
	var x389 uint64
	var x390 fiatFpMontUint1
	x389, x390 = fiatFpMontAddcarryxU64(x388, x385, 0x0)
	var x391 uint64
	var x392 fiatFpMontUint1
	x391, x392 = fiatFpMontAddcarryxU64(x386, x383, x390)
	var x393 uint64
	var x394 fiatFpMontUint1
	x393, x394 = fiatFpMontAddcarryxU64(x384, x381, x392)
	var x395 uint64
	var x396 fiatFpMontUint1
	x395, x396 = fiatFpMontAddcarryxU64(x382, x379, x394)
	var x397 uint64
	var x398 fiatFpMontUint1
	x397, x398 = fiatFpMontAddcarryxU64(x380, x377, x396)
	x399 := (uint64(x398) + x378)
	var x400 uint64
	var x401 fiatFpMontUint1
	x400, x401 = fiatFpMontAddcarryxU64(x364, x387, 0x0)
	var x402 uint64
	var x403 fiatFpMontUint1
	x402, x403 = fiatFpMontAddcarryxU64(x366, x389, x401)
	var x404 uint64
	var x405 fiatFpMontUint1
	x404, x405 = fiatFpMontAddcarryxU64(x368, x391, x403)
	var x406 uint64
	var x407 fiatFpMontUint1
	x406, x407 = fiatFpMontAddcarryxU64(x370, x393, x405)
	var x408 uint64
	var x409 fiatFpMontUint1
	x408, x409 = fiatFpMontAddcarryxU64(x372, x395, x407)
	var x410 uint64
	var x411 fiatFpMontUint1
	x410, x411 = fiatFpMontAddcarryxU64(x374, x397, x409)
	var x412 uint64
	var x413 fiatFpMontUint1
	x412, x413 = fiatFpMontAddcarryxU64(x376, x399, x411)
	var x414 uint64
	_, x414 = bits.Mul64(x400, 0x89f3fffcfffcfffd)
	var x416 uint64
	var x417 uint64
	x417, x416 = bits.Mul64(x414, 0x1a0111ea397fe69a)
	var x418 uint64
	var x419 uint64
	x419, x418 = bits.Mul64(x414, 0x4b1ba7b6434bacd7)
	var x420 uint64
	var x421 uint64
	x421, x420 = bits.Mul64(x414, 0x64774b84f38512bf)
	var x422 uint64
	var x423 uint64
	x423, x422 = bits.Mul64(x414, 0x6730d2a0f6b0f624)
	var x424 uint64
	var x425 uint64
	x425, x424 = bits.Mul64(x414, 0x1eabfffeb153ffff)
	var x426 uint64
	var x427 uint64
	x427, x426 = bits.Mul64(x414, 0xb9feffffffffaaab)
	var x428 uint64
	var x429 fiatFpMontUint1
	x428, x429 = fiatFpMontAddcarryxU64(x427, x424, 0x0)
	var x430 uint64
	var x431 fiatFpMontUint1
	x430, x431 = fiatFpMontAddcarryxU64(x425, x422, x429)
	var x432 uint64
	var x433 fiatFpMontUint1
	x432, x433 = fiatFpMontAddcarryxU64(x423, x420, x431)
	var x434 uint64
	var x435 fiatFpMontUint1
	x434, x435 = fiatFpMontAddcarryxU64(x421, x418, x433)
	var x436 uint64
	var x437 fiatFpMontUint1
	x436, x437 = fiatFpMontAddcarryxU64(x419, x416, x435)
	x438 := (uint64(x437) + x417)
	var x440 fiatFpMontUint1
	_, x440 = fiatFpMontAddcarryxU64(x400, x426, 0x0)
	var x441 uint64
	var x442 fiatFpMontUint1
	x441, x442 = fiatFpMontAddcarryxU64(x402, x428, x440)
	var x443 uint64
	var x444 fiatFpMontUint1
	x443, x444 = fiatFpMontAddcarryxU64(x404, x430, x442)
	var x445 uint64
	var x446 fiatFpMontUint1
	x445, x446 = fiatFpMontAddcarryxU64(x406, x432, x444)
	var x447 uint64
	var x448 fiatFpMontUint1
	x447, x448 = fiatFpMontAddcarryxU64(x408, x434, x446)
	var x449 uint64
	var x450 fiatFpMontUint1
	x449, x450 = fiatFpMontAddcarryxU64(x410, x436, x448)
	var x451 uint64
	var x452 fiatFpMontUint1
	x451, x452 = fiatFpMontAddcarryxU64(x412, x438, x450)
	x453 := (uint64(x452) + uint64(x413))
	var x454 uint64
	var x455 fiatFpMontUint1
	x454, x455 = fiatFpMontSubborrowxU64(x441, 0xb9feffffffffaaab, 0x0)
	var x456 uint64
	var x457 fiatFpMontUint1
	x456, x457 = fiatFpMontSubborrowxU64(x443, 0x1eabfffeb153ffff, x455)
	var x458 uint64
	var x459 fiatFpMontUint1
	x458, x459 = fiatFpMontSubborrowxU64(x445, 0x6730d2a0f6b0f624, x457)
	var x460 uint64
	var x461 fiatFpMontUint1
	x460, x461 = fiatFpMontSubborrowxU64(x447, 0x64774b84f38512bf, x459)
	var x462 uint64
	var x463 fiatFpMontUint1
	x462, x463 = fiatFpMontSubborrowxU64(x449, 0x4b1ba7b6434bacd7, x461)
	var x464 uint64
	var x465 fiatFpMontUint1
	x464, x465 = fiatFpMontSubborrowxU64(x451, 0x1a0111ea397fe69a, x463)
	var x467 fiatFpMontUint1
	_, x467 = fiatFpMontSubborrowxU64(x453, uint64(0x0), x465)
	var x468 uint64
	fiatFpMontCmovznzU64(&x468, x467, x454, x441)
	var x469 uint64
	fiatFpMontCmovznzU64(&x469, x467, x456, x443)
	var x470 uint64
	fiatFpMontCmovznzU64(&x470, x467, x458, x445)
	var x471 uint64
	fiatFpMontCmovznzU64(&x471, x467, x460, x447)
	var x472 uint64
	fiatFpMontCmovznzU64(&x472, x467, x462, x449)
	var x473 uint64
	fiatFpMontCmovznzU64(&x473, x467, x464, x451)
	out1[0] = x468
	out1[1] = x469
	out1[2] = x470
	out1[3] = x471
	out1[4] = x472
	out1[5] = x473
}
