package decaf448

import (
	"errors"

	fp "github.com/cloudflare/circl/math/fp448"
)

// DecafEncodingSize is the size (in bytes) of an encoded Decaf element.
const EncodingSize = fp.Size

// ErrInvalidDecoding alerts of an error during decoding a point.
var ErrInvalidDecoding = errors.New("invalid decoding")

var (
	// aMinusD is paramA-paramD = (-1)-(-39082) = 39081.
	aMinusD = fp.Elt{0xa9, 0x98}
	// sqrtAMinusD is the smallest root of sqrt(paramA-paramD) = sqrt(39081).
	sqrtAMinusD = fp.Elt{
		0x36, 0x27, 0x57, 0x45, 0x0f, 0xef, 0x42, 0x96,
		0x52, 0xce, 0x20, 0xaa, 0xf6, 0x7b, 0x33, 0x60,
		0xd2, 0xde, 0x6e, 0xfd, 0xf4, 0x66, 0x9a, 0x83,
		0xba, 0x14, 0x8c, 0x96, 0x80, 0xd7, 0xa2, 0x64,
		0x4b, 0xd5, 0xb8, 0xa5, 0xb8, 0xa7, 0xf1, 0xa1,
		0xa0, 0x6a, 0xa2, 0x2f, 0x72, 0x8d, 0xf6, 0x3b,
		0x68, 0xf7, 0x24, 0xeb, 0xfb, 0x62, 0xd9, 0x22,
	}
)
